<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="data.mapper.ReviewMapper">

    <select id="selectReviewCount" parameterType="int" resultType="int">
        select count(*) from review where roomNum=#{num}
    </select>

    <!--  mainpage > reviewZone DESC LIST 메인페이지 리뷰 -->
    <select id="getReviewList" resultType="reviewDto">
        select roomNum, name roomName, weekAmPrice, reviewImageUrl, rating, content from review re
        inner join room ro on re.roomNum = ro.num
        where ro.hideStatus=1 and ro.approvalStatus=1
        order by re.num desc
    </select>

    <!-- rating avg -->
    <select id="getReviewAvg" parameterType="int" resultType="int">
        select ifnull(round(avg(rating),0),0) from review where roomNum=#{num}
    </select>

    <select id="getReviewByUserNum" parameterType="Map" resultType="reviewDto">
        select r.name,content,answerContent,rating,reviewImageUrl,re.writeday,bd.num num,re.num reNum,re.roomNum from review re
        inner join room r on re.roomNum= r.num
        inner join bookingDetail bd on re.bookingDetailNum=bd.num
        where re.userNum=#{userNum} ${sort}

    </select>

    <!-- review insert -->
    <insert id="reviewInsert" parameterType="map">
        insert into review (num, content, rating, reviewImageUrl, writeday, userNum, roomNum, bookingDetailNum)
        values (null, #{content}, #{rating}, #{uploadFile}, now(), #{userNum}, #{roomNum}, #{bookingDetailNum})
    </insert>

    <!--review delete   -->
    <delete id="reviewDelete" parameterType="int">
        delete from review where num=#{num}
    </delete>
    <!--수정데이터 가져오기-->
    <select id="getReviewByNum" resultType="reviewDto" parameterType="int">
        select * from review where num=#{num}
    </select>
    <!-- member 리뷰 수정   -->
    <update id="updateReview" parameterType="map">
    update review set content = #{content}, rating = #{rating}, reviewImageUrl = #{uploadFile},writeday = now() where num = #{num}
    </update>

    <select id="reviewCheck" resultType="reviewDto" parameterType="int">
        select content from review where bookingDetailNum=#{bookingDetailNum};
    </select>

     <!-- host 기준 리뷰 관리    -->
    <select id="getReviewByHostNum" resultType="reviewDto" parameterType="Map">
        select re.num reNum, r.name,content,rating,re.writeday,reviewImageUrl,re.roomNum,m.nickname,bd.num num from review re
        inner join room r on re.roomNum= r.num
        inner join member m on re.userNum= m.idx
        inner join bookingDetail bd on re.bookingDetailNum=bd.num
        where r.hostNum= #{hostNum} ${sort};
    </select>
</mapper>


