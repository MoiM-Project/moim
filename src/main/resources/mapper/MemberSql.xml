<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="data.mapper.MemberMapper">

    <!--  member grade check // 로그인 한 회원의 등급 체크 (admin 확인용)  -->
    <select id="adminCheck" parameterType="int" resultType="String">
        select grade from member where idx = #{userNum}
    </select>

    <!--  admin > memberList  -->
    <select id="getMemberSearchList" parameterType="map" resultType="MemberDto">
        select * from member where (nickname like concat('%',#{searchWord},'%') or email like concat('%',#{searchWord},'%')) ${sort}
    </select>

    <!--  admin > memberList > LoginType Check 로그인 타입 체크  -->
    <!--  password 를 가져와서 Controller에서 판단할 예정  -->
    <select id="LoginTypeCheck" parameterType="int" resultType="String">
        select password from member where idx=#{num}
    </select>

    <!--  admin > memberList > update Active Status / 멤버 활성상태 변경 -->
    <update id="updateMemberActive" parameterType="int">
        UPDATE member SET status = IF (status=0, 1, 0) WHERE idx = #{userNum};
    </update>

    <!--  admin > memberList > update password / 멤버 비밀번호 초기화  -->
    <!--  비밀번호가 1일 경우 로그인하면 비밀번호 변경 화면으로 이동되도록?  -->
    <update id="updateMemberPassword" parameterType="int">
        update member set password=1 where idx = #{userNum}
    </update>

    <!-- 비밀번호 변경   -->
    <update id="updatePassword" parameterType="map">
        update member set password=#{password} where idx = #{idx}
    </update>

    <!-- 닉네임 변경   -->
    <update id="updateNickname" parameterType="map">
        update member set nickname=#{nickname} where idx = #{idx}
    </update>

    <!-- 이메일로 번호 알아내기   -->
    <select id="findUserByUserId" parameterType="String">
        select idx from member where email=#{email}
    </select>

    <!--  프로필 사진 변경  -->
    <update id="profileUpdate" parameterType="map">
        update member set profile_image= #{updateFile} where idx = #{idx}
    </update>

    <select id="getMemberInfo" parameterType="int" resultType="MemberDto">
        select * from member where idx=#{idx}
    </select>

    <delete id="deleteMember" parameterType="int">
        delete from member where idx=#{idx}
    </delete>

    <select id="searchSocial" parameterType="String" resultType="String">
        select password from member where email=#{email}
    </select>
</mapper>
